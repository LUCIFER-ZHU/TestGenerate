<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="doc.core.sample.mapper.ProvinceMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ProvinceResultMap" type="doc.core.sample.domain.Province" autoMapping="true">
		<id property="provinceId" column="provinceid" /><!--主键字段映射-->
    </resultMap>

    <select id="selectById"  resultMap="ProvinceResultMap">
        <include refid="view" /> 
         where 
         t1.provinceid=#{id}
    </select>

    <select id="selectEntity" parameterType="doc.core.sample.domain.Province" resultMap="ProvinceResultMap">
        <include refid="view" /> 
         where 
         (provinceid = #{ provinceId })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="ProvinceResultMap">
        <include refid="view" /> 
         where 
         (provinceid)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.provinceId }) </foreach>)
    </select>

    <sql id="conditions" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CODE`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`MEMO`, t1.`PROVINCEID`, t1.`PROVINCENAME`, t1.`SN`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_PROVINCE` t1   where ( LENGTH(t1.`PROVINCENAME`) = 10  AND  t1.`CREATEMAN` = #{ctx.sessioncontext.srfpersonid}  AND  t1.`PROVINCENAME` IS NULL  AND  t1.`PROVINCENAME` IS NOT NULL  AND  t1.`PROVINCENAME` LIKE CONCAT('%',#{ctx.sessioncontext.srforgid},'%')  AND  t1.`PROVINCENAME` LIKE CONCAT('%',#{ctx.sessioncontext.srforgname})  AND  t1.`PROVINCENAME` LIKE CONCAT(#{ctx.sessioncontext.srfusername},'%')  AND  t1.`SN` <> #{ctx.datacontext.sn}  AND  t1.`SN` > #{ctx.globalcontext.sn}  AND  t1.`SN` >= #{ctx.sessioncontext.sn}  AND  t1.`SN` < #{ctx.systemcontext.sn}  AND  t1.`SN` <= #{ctx.webcontext.sn}  AND  t1.`CODE` IN (#{ctx.sessioncontext.srforgid}) )
        ]]>    
    </sql>

    <sql id="default" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CODE`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`MEMO`, t1.`PROVINCEID`, t1.`PROVINCENAME`, t1.`SN`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_PROVINCE` t1  
        ]]>    
    </sql>

    <sql id="simple" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`PROVINCEID`, t1.`PROVINCENAME`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_PROVINCE` t1  
        ]]>    
    </sql>

    <sql id="view" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CODE`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`MEMO`, t1.`PROVINCEID`, t1.`PROVINCENAME`, t1.`SN`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_PROVINCE` t1  
        ]]>    
    </sql>

    <select id="searchConditions"  parameterType="doc.core.sample.filter.ProvinceSearchContext"  resultMap="ProvinceResultMap">
        select t1.* 
        from (
            <include refid="conditions"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
            
    </select>
    
    <select id="searchDefault"  parameterType="doc.core.sample.filter.ProvinceSearchContext"  resultMap="ProvinceResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
            
    </select>
    

</mapper>