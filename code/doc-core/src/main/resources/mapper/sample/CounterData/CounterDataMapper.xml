<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="doc.core.sample.mapper.CounterDataMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="CounterDataResultMap" type="doc.core.sample.domain.CounterData" autoMapping="true">
		<id property="counterDataId" column="counterdataid" /><!--主键字段映射-->
    </resultMap>

    <select id="selectById"  resultMap="CounterDataResultMap">
        <include refid="view" /> 
         where 
         t1.counterdataid=#{id}
    </select>

    <select id="selectEntity" parameterType="doc.core.sample.domain.CounterData" resultMap="CounterDataResultMap">
        <include refid="view" /> 
         where 
         (counterdataid = #{ counterDataId })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="CounterDataResultMap">
        <include refid="view" /> 
         where 
         (counterdataid)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.counterDataId }) </foreach>)
    </select>

    <sql id="default" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CNT`, t1.`COUNTERDATAID`, t1.`COUNTERDATANAME`, t1.`COUNTERTAG`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DEPTID`, t1.`ORGID`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_COUNTERDATA` t1  
        ]]>    
    </sql>

    <sql id="simple" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`COUNTERDATAID`, t1.`COUNTERDATANAME`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DEPTID`, t1.`ORGID`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_COUNTERDATA` t1  
        ]]>    
    </sql>

    <sql id="view" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CNT`, t1.`COUNTERDATAID`, t1.`COUNTERDATANAME`, t1.`COUNTERTAG`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`DEPTID`, t1.`ORGID`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_COUNTERDATA` t1  
        ]]>    
    </sql>

    <select id="searchDefault"  parameterType="doc.core.sample.filter.CounterDataSearchContext"  resultMap="CounterDataResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
            
    </select>
    

</mapper>