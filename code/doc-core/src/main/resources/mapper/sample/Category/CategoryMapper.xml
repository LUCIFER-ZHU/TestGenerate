<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="doc.core.sample.mapper.CategoryMapper">

        <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="CategoryResultMap" type="doc.core.sample.domain.Category" autoMapping="true">
		<id property="categoryId" column="categoryid" /><!--主键字段映射-->
		<result property="pcategoryid" column="pcategoryid" />
        <association property="parentCategory" javaType="doc.core.sample.domain.Category" column="pcategoryid" select="doc.core.sample.mapper.CategoryMapper.selectById" fetchType="lazy"></association>
    </resultMap>

    <select id="selectById"  resultMap="CategoryResultMap">
        <include refid="view" /> 
         where 
         t1.categoryid=#{id}
    </select>

    <select id="selectEntity" parameterType="doc.core.sample.domain.Category" resultMap="CategoryResultMap">
        <include refid="view" /> 
         where 
         (categoryid = #{ categoryId })
    </select>

    <select id="selectEntities" parameterType="java.util.List" resultMap="CategoryResultMap">
        <include refid="view" /> 
         where 
         (categoryid)
         in (<foreach collection="list" item="item" index="index" separator=","> (#{ item.categoryId }) </foreach>)
    </select>

    <sql id="default" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CATEGORYID`, t1.`CATEGORYNAME`, t1.`CATEGORYNAMEPATH`, t1.`CATEGORYPATH`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`PCATEGORYID`, t11.`CATEGORYNAME` AS `PCATEGORYNAME`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_CATEGORY` t1  LEFT JOIN `T_CATEGORY` t11 ON t1.`PCATEGORYID` = t11.`CATEGORYID`  
        ]]>    
    </sql>

    <sql id="root" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CATEGORYID`, t1.`CATEGORYNAME`, t1.`CATEGORYNAMEPATH`, t1.`CATEGORYPATH`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`PCATEGORYID`, t11.`CATEGORYNAME` AS `PCATEGORYNAME`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_CATEGORY` t1  LEFT JOIN `T_CATEGORY` t11 ON t1.`PCATEGORYID` = t11.`CATEGORYID`   where ( t1.`PCATEGORYID` IS NULL )
        ]]>    
    </sql>

    <sql id="simple" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CATEGORYID`, t1.`CATEGORYNAME`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_CATEGORY` t1  
        ]]>    
    </sql>

    <sql id="view" databaseId="mysql">
        <![CDATA[ 
            SELECT t1.`CATEGORYID`, t1.`CATEGORYNAME`, t1.`CATEGORYNAMEPATH`, t1.`CATEGORYPATH`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`PCATEGORYID`, t11.`CATEGORYNAME` AS `PCATEGORYNAME`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_CATEGORY` t1  LEFT JOIN `T_CATEGORY` t11 ON t1.`PCATEGORYID` = t11.`CATEGORYID`  
        ]]>    
    </sql>

    <select id="searchDefault"  parameterType="doc.core.sample.filter.CategorySearchContext"  resultMap="CategoryResultMap">
        select t1.* 
        from (
            <include refid="default"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
            
    </select>
    
    <select id="searchRoot"  parameterType="doc.core.sample.filter.CategorySearchContext"  resultMap="CategoryResultMap">
        select t1.* 
        from (
            <include refid="root"/>
        ) t1 
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        
            
    </select>
    
    <select id="selectByPcategoryid" resultMap="CategoryResultMap">
        <include refid="default" />
         where 
        pcategoryid = #{ pcategoryid }
    </select>


</mapper>